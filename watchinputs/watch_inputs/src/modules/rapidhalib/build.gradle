apply plugin: 'com.android.model.native'

final local_APP_ABIS=APP_ABIS

model {
    android {
        compileSdkVersion NDKCOMPILESDKVERSION
    }
    android.ndk {
        moduleName 'rapidhalib'
        if (rootProject.ext.has('NDKTOOLCHAIN')) {
            toolchain NDKTOOLCHAIN
        }
        if (rootProject.ext.has('NDKTOOLCHAINVER')) {
            toolchainVersion NDKTOOLCHAINVER
        }
        CFlags.addAll(COMMON_CFLAGS)
        cppFlags.addAll(COMMON_CPPFLAGS)
        if (rootProject.ext.has('RAPIDHALIB_LOCKDEBUG')) {
          logger.quiet('DEBUG: rapidhalib: Enabling Lock debugging')
          CFlags.add('-DRAPIDHALIB_LOCKDEBUG')
          cppFlags.add('-DRAPIDHALIB_LOCKDEBUG')
        }
        if (rootProject.ext.has('RAPIDHALIB_MOREDEBUG')) {
          logger.quiet('DEBUG: rapidhalib: Enabling More debugging')
          CFlags.add('-DRAPIDHALIB_MOREDEBUG')
          cppFlags.add('-DRAPIDHALIB_MOREDEBUG')
        }
        if (rootProject.ext.has('RAPIDHALIB_DEBUGWITHOUTDATABASE')) {
          logger.quiet('DEBUG: rapidhalib: Enabling Debugging without database')
          CFlags.add('-DRAPIDHALIB_DEBUGWITHOUTDATABASE')
          cppFlags.add('-DRAPIDHALIB_DEBUGWITHOUTDATABASE')
        }
    }
    android.sources {
        main {
            jni {
                exportedHeaders {
                    srcDir "../.."
                }
                source {
                    srcDir "."
                }
            }
        }
    }
    android.productFlavors {
        local_APP_ABIS.each { abi ->
            create(getFlavorName(abi)) {
                ndk.with {
                    abiFilters.add(abi)
                    getPrebuiltLibPaths(abi).each { path ->
                        ldFlags.addAll("-L" + path)
                    }

                }
            }
        }
        create("fat") {
            ndk {
                local_APP_ABIS.each { abi ->
                    abiFilters.add(abi)
                    getPrebuiltLibPaths(abi).each { path ->
                        ldFlags.addAll("-L" + path)
                    }
                }
            }
        }
    }
}
