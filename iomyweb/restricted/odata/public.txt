<?php
/**
 * VP_COUNTRIES entity type.
 * 
 * @category  Service
 * @package   Service_CountriesView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_COUNTRIES{
	public $COUNTRIES_PK;
	public $COUNTRIES_NAME_EN;
	public $COUNTRIES_NAME_ZH;
	public $COUNTRIES_ABREVIATION;
}

//Register the entity (resource) type 'VP_COUNTRIES'
	$VP_COUNTRIESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_COUNTRIES'), 'VP_COUNTRIES', 'CountriesView'
	);
	$metadata->addKeyProperty(	$VP_COUNTRIESEntityType, 'COUNTRIES_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty(	$VP_COUNTRIESEntityType, 'COUNTRIES_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty(	$VP_COUNTRIESEntityType, 'COUNTRIES_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty(	$VP_COUNTRIESEntityType, 'COUNTRIES_ABREVIATION', EdmPrimitiveType::CHARARRAY);
		
	$VP_COUNTRIESsResourceSet = $metadata->addResourceSet(
		'VP_COUNTRIESs', $VP_COUNTRIESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_COUNTRIES($record)
		{
			$VP_COUNTRIES = new VP_COUNTRIES();
			$VP_COUNTRIES->COUNTRIES_PK = $record['COUNTRIES_PK'];
			$VP_COUNTRIES->COUNTRIES_NAME_EN = $record['COUNTRIES_NAME_EN'];
			$VP_COUNTRIES->COUNTRIES_NAME_ZH = $record['COUNTRIES_NAME_ZH'];
			$VP_COUNTRIES->COUNTRIES_ABREVIATION = $record['COUNTRIES_ABREVIATION'];

			return $VP_COUNTRIES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_CURRENCIES entity type.
 * 
 * @category  Service
 * @package   Service_CurrenciesView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_CURRENCIES{
	public $CURRENCIES_PK;
	public $CURRENCIES_NAME;
	public $CURRENCIES_ABREVIATION;
	public $COUNTRIES_PK;
	public $COUNTRIES_NAME_EN;
	public $COUNTRIES_NAME_ZH;
	public $COUNTRIES_ABREVIATION;
}

//Register the entity (resource) type 'VP_CURRENCIES'
	$VP_CURRENCIESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_CURRENCIES'), 'VP_CURRENCIES', 'CurrenciesView'
	);
	$metadata->addKeyProperty($VP_CURRENCIESEntityType, 'CURRENCIES_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_CURRENCIESEntityType, 'CURRENCIES_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_CURRENCIESEntityType, 'CURRENCIES_ABREVIATION', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_CURRENCIESEntityType, 'COUNTRIES_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_CURRENCIESEntityType, 'COUNTRIES_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_CURRENCIESEntityType, 'COUNTRIES_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_CURRENCIESEntityType, 'COUNTRIES_ABREVIATION', EdmPrimitiveType::CHARARRAY);
		
	$VP_CURRENCIESsResourceSet = $metadata->addResourceSet(
		'VP_CURRENCIESs', $VP_CURRENCIESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_CURRENCIES($record)
		{
			$VP_CURRENCIES = new VP_CURRENCIES();
			$VP_CURRENCIES->CURRENCIES_PK = $record['CURRENCIES_PK'];
			$VP_CURRENCIES->CURRENCIES_NAME = $record['CURRENCIES_NAME'];
			$VP_CURRENCIES->CURRENCIES_ABREVIATION = $record['CURRENCIES_ABREVIATION'];
			$VP_CURRENCIES->COUNTRIES_PK = $record['COUNTRIES_PK'];
			$VP_CURRENCIES->COUNTRIES_NAME_EN = $record['COUNTRIES_NAME_EN'];
			$VP_CURRENCIES->COUNTRIES_NAME_ZH = $record['COUNTRIES_NAME_ZH'];
			$VP_CURRENCIES->COUNTRIES_ABREVIATION = $record['COUNTRIES_ABREVIATION'];

			return $VP_CURRENCIES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_ICONS entity type.
 * 
 * @category  Service
 * @package   Service_IconsView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_ICONS{
	public $ICONS_PK;
	public $ICONS_NAME;
	public $ICONS_ICON;
	public $ICONSTYPE_NAME;
	public $ICONSTYPE_PK;
}

//Register the entity (resource) type 'VP_ICONS'
	$VP_ICONSEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_ICONS'), 'VP_ICONS', 'IconsView'
	);
	$metadata->addKeyProperty($VP_ICONSEntityType, 'ICONS_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_ICONSEntityType, 'ICONS_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_ICONSEntityType, 'ICONS_ICON', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_ICONSEntityType, 'ICONSTYPE_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_ICONSEntityType, 'ICONSTYPE_PK', EdmPrimitiveType::INT32);
		
	$VP_ICONSsResourceSet = $metadata->addResourceSet(
		'VP_ICONSs', $VP_ICONSEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_ICONS($record)
		{
			$VP_ICONS = new VP_ICONS();
			$VP_ICONS->ICONS_PK = $record['ICONS_PK'];
			$VP_ICONS->ICONS_NAME = $record['ICONS_NAME'];
			$VP_ICONS->ICONS_ICON = $record['ICONS_ICON'];
			$VP_ICONS->ICONSTYPE_NAME = $record['ICONSTYPE_NAME'];
			$VP_ICONS->ICONSTYPE_PK = $record['ICONSTYPE_PK'];

			return $VP_ICONS;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_LANGUAGES entity type.
 * 
 * @category  Service
 * @package   Service_LanguagesView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_LANGUAGES{
	public $LANGUAGE_PK;
	public $LANGUAGE_NAME;
	public $LANGUAGE_LANGUAGE;
	public $LANGUAGE_VARIANT;
	public $LANGUAGE_ENCODING;
	public $COUNTRIES_PK;
	public $COUNTRIES_NAME_EN;
	public $COUNTRIES_NAME_ZH;
	public $COUNTRIES_ABREVIATION;
}

//Register the entity (resource) type 'VP_LANGUAGES'
	$VP_LANGUAGESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_LANGUAGES'), 'VP_LANGUAGES', 'LanguagesView'
	);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'LANGUAGE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'LANGUAGE_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'LANGUAGE_LANGUAGE', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'LANGUAGE_VARIANT', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'LANGUAGE_ENCODING', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'COUNTRIES_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'COUNTRIES_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'COUNTRIES_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_LANGUAGESEntityType, 'COUNTRIES_ABREVIATION', EdmPrimitiveType::CHARARRAY);
		
	$VP_LANGUAGESsResourceSet = $metadata->addResourceSet(
		'VP_LANGUAGESs', $VP_LANGUAGESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_LANGUAGES($record)
		{
			$VP_LANGUAGES = new VP_LANGUAGES();
			$VP_LANGUAGES->LANGUAGE_PK = $record['LANGUAGE_PK'];
			$VP_LANGUAGES->LANGUAGE_NAME = $record['LANGUAGE_NAME'];
			$VP_LANGUAGES->LANGUAGE_LANGUAGE = $record['LANGUAGE_LANGUAGE'];
			$VP_LANGUAGES->LANGUAGE_VARIANT = $record['LANGUAGE_VARIANT'];
			$VP_LANGUAGES->LANGUAGE_ENCODING = $record['LANGUAGE_ENCODING'];
			$VP_LANGUAGES->COUNTRIES_PK = $record['COUNTRIES_PK'];
			$VP_LANGUAGES->COUNTRIES_NAME_EN = $record['COUNTRIES_NAME_EN'];
			$VP_LANGUAGES->COUNTRIES_NAME_ZH = $record['COUNTRIES_NAME_ZH'];
			$VP_LANGUAGES->COUNTRIES_ABREVIATION = $record['COUNTRIES_ABREVIATION'];

			return $VP_LANGUAGES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_POSTCODES entity type.
 * 
 * @category  Service
 * @package   Service_PostcodesView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_POSTCODES{
	public $POSTCODE_PK;
	public $POSTCODE_NAME;
	public $STATEPROVINCE_PK;
	public $STATEPROVINCE_SHORTNAME;
	public $STATEPROVINCE_NAME_EN;
	public $STATEPROVINCE_NAME_ZH;
	public $COUNTRIES_PK;
	public $COUNTRIES_NAME_EN;
	public $COUNTRIES_NAME_ZH;
	public $COUNTRIES_ABREVIATION;
	public $TIMEZONE_PK;
	public $TIMEZONE_CC;
	public $TIMEZONE_LATITUDE;
	public $TIMEZONE_LONGITUDE;
	public $TIMEZONE_TZ;
	public $TIMEZONE_UTCOFFSET;
	public $TIMEZONE_HANACODE;
	public $TIMEZONE_UTCFLOAT;
}

//Register the entity (resource) type 'VP_POSTCODES'
	$VP_POSTCODESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_POSTCODES'), 'VP_POSTCODES', 'PostcodesView'
	);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'POSTCODE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'POSTCODE_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'STATEPROVINCE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'STATEPROVINCE_SHORTNAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'STATEPROVINCE_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'STATEPROVINCE_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'COUNTRIES_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'COUNTRIES_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'COUNTRIES_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'COUNTRIES_ABREVIATION', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_CC', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_LATITUDE', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_LONGITUDE', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_TZ', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_UTCOFFSET', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_HANACODE', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_POSTCODESEntityType, 'TIMEZONE_UTCFLOAT', EdmPrimitiveType::DOUBLE);
		
	$VP_POSTCODESsResourceSet = $metadata->addResourceSet(
		'VP_POSTCODESs', $VP_POSTCODESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_POSTCODES($record)
		{
			$VP_POSTCODES = new VP_POSTCODES();
			$VP_POSTCODES->POSTCODE_PK = $record['POSTCODE_PK'];
			$VP_POSTCODES->POSTCODE_NAME = $record['POSTCODE_NAME'];
			$VP_POSTCODES->STATEPROVINCE_PK = $record['STATEPROVINCE_PK'];
			$VP_POSTCODES->STATEPROVINCE_SHORTNAME = $record['STATEPROVINCE_SHORTNAME'];
			$VP_POSTCODES->STATEPROVINCE_NAME_EN = $record['STATEPROVINCE_NAME_EN'];
			$VP_POSTCODES->STATEPROVINCE_NAME_ZH = $record['STATEPROVINCE_NAME_ZH'];
			$VP_POSTCODES->COUNTRIES_PK = $record['COUNTRIES_PK'];
			$VP_POSTCODES->COUNTRIES_NAME_EN = $record['COUNTRIES_NAME_EN'];
			$VP_POSTCODES->COUNTRIES_NAME_ZH = $record['COUNTRIES_NAME_ZH'];
			$VP_POSTCODES->COUNTRIES_ABREVIATION = $record['COUNTRIES_ABREVIATION'];
			$VP_POSTCODES->TIMEZONE_PK = $record['TIMEZONE_PK'];
			$VP_POSTCODES->TIMEZONE_CC = $record['TIMEZONE_CC'];
			$VP_POSTCODES->TIMEZONE_LATITUDE = $record['TIMEZONE_LATITUDE'];
			$VP_POSTCODES->TIMEZONE_LONGITUDE = $record['TIMEZONE_LONGITUDE'];
			$VP_POSTCODES->TIMEZONE_TZ = $record['TIMEZONE_TZ'];
			$VP_POSTCODES->TIMEZONE_UTCOFFSET = $record['TIMEZONE_UTCOFFSET'];
			$VP_POSTCODES->TIMEZONE_HANACODE = $record['TIMEZONE_HANACODE'];
			$VP_POSTCODES->TIMEZONE_UTCFLOAT = $record['TIMEZONE_UTCFLOAT'];

			return $VP_POSTCODES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_PREMISEBEDROOMS entity type.
 * 
 * @category  Service
 * @package   Service_PremisebedroomsView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_PREMISEBEDROOMS{
	public $BEDROOMS_PK;
	public $BEDROOMS_COUNT;
}

//Register the entity (resource) type 'VP_PREMISEBEDROOMS'
	$VP_PREMISEBEDROOMSEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_PREMISEBEDROOMS'), 'VP_PREMISEBEDROOMS', 'PremisebedroomsView'
	);
	$metadata->addKeyProperty($VP_PREMISEBEDROOMSEntityType, 'BEDROOMS_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_PREMISEBEDROOMSEntityType, 'BEDROOMS_COUNT', EdmPrimitiveType::CHARARRAY);
		
	$VP_PREMISEBEDROOMSsResourceSet = $metadata->addResourceSet(
		'VP_PREMISEBEDROOMSs', $VP_PREMISEBEDROOMSEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_PREMISEBEDROOMS($record)
		{
			$VP_PREMISEBEDROOMS = new VP_PREMISEBEDROOMS();
			$VP_PREMISEBEDROOMS->BEDROOMS_PK = $record['BEDROOMS_PK'];
			$VP_PREMISEBEDROOMS->BEDROOMS_COUNT = $record['BEDROOMS_COUNT'];

			return $VP_PREMISEBEDROOMS;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_PREMISEBUILDINGTYPES entity type.
 * 
 * @category  Service
 * @package   Service_PremisebuildingtypesView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_PREMISEBUILDINGTYPES{
	public $BUILDINGTYPES_PK;
	public $BUILDINGTYPES_NAME_ZH;
	public $BUILDINGTYPES_NAME_EN;
	public $PREMISETYPE_PK;
	public $PREMISETYPE_NAME;
}

//Register the entity (resource) type 'VP_PREMISEBUILDINGTYPES'
	$VP_PREMISEBUILDINGTYPESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_PREMISEBUILDINGTYPES'), 'VP_PREMISEBUILDINGTYPES', 'PremisebuildingtypesView'
	);
	$metadata->addKeyProperty($VP_PREMISEBUILDINGTYPESEntityType, 'BUILDINGTYPES_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_PREMISEBUILDINGTYPESEntityType, 'BUILDINGTYPES_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_PREMISEBUILDINGTYPESEntityType, 'BUILDINGTYPES_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_PREMISEBUILDINGTYPESEntityType, 'PREMISETYPE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_PREMISEBUILDINGTYPESEntityType, 'PREMISETYPE_NAME', EdmPrimitiveType::CHARARRAY);
		
	$VP_PREMISEBUILDINGTYPESsResourceSet = $metadata->addResourceSet(
		'VP_PREMISEBUILDINGTYPESs', $VP_PREMISEBUILDINGTYPESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_PREMISEBUILDINGTYPES($record)
		{
			$VP_PREMISEBUILDINGTYPES = new VP_PREMISEBUILDINGTYPES();
			$VP_PREMISEBUILDINGTYPES->BUILDINGTYPES_PK = $record['BUILDINGTYPES_PK'];
			$VP_PREMISEBUILDINGTYPES->BUILDINGTYPES_NAME_ZH = $record['BUILDINGTYPES_NAME_ZH'];
			$VP_PREMISEBUILDINGTYPES->BUILDINGTYPES_NAME_EN = $record['BUILDINGTYPES_NAME_EN'];
			$VP_PREMISEBUILDINGTYPES->PREMISETYPE_PK = $record['PREMISETYPE_PK'];
			$VP_PREMISEBUILDINGTYPES->PREMISETYPE_NAME = $record['PREMISETYPE_NAME'];

			return $VP_PREMISEBUILDINGTYPES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_PREMISEFLOORS entity type.
 * 
 * @category  Service
 * @package   Service_PremisefloorsView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_PREMISEFLOORS{
	public $PREMISEFLOORS_PK;
	public $PREMISEFLOORS_NAME;
}

//Register the entity (resource) type 'VP_PREMISEFLOORS'
	$VP_PREMISEFLOORSEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_PREMISEFLOORS'), 'VP_PREMISEFLOORS', 'PremisefloorsView'
	);
	$metadata->addKeyProperty($VP_PREMISEFLOORSEntityType, 'PREMISEFLOORS_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_PREMISEFLOORSEntityType, 'PREMISEFLOORS_NAME', EdmPrimitiveType::CHARARRAY);
		
	$VP_PREMISEFLOORSsResourceSet = $metadata->addResourceSet(
		'VP_PREMISEFLOORSs', $VP_PREMISEFLOORSEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_PREMISEFLOORS($record)
		{
			$VP_PREMISEFLOORS = new VP_PREMISEFLOORS();
			$VP_PREMISEFLOORS->PREMISEFLOORS_PK = $record['PREMISEFLOORS_PK'];
			$VP_PREMISEFLOORS->PREMISEFLOORS_NAME = $record['PREMISEFLOORS_NAME'];

			return $VP_PREMISEFLOORS;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_PREMISEOCCUPANTS entity type.
 * 
 * @category  Service
 * @package   Service_PremiseoccupantsView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_PREMISEOCCUPANTS{
	public $OCCUPANTS_PK;
	public $OCCUPANTS_NAME;
}

//Register the entity (resource) type 'VP_PREMISEOCCUPANTS'
	$VP_PREMISEOCCUPANTSEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_PREMISEOCCUPANTS'), 'VP_PREMISEOCCUPANTS', 'PremiseoccupantsView'
	);
	$metadata->addKeyProperty($VP_PREMISEOCCUPANTSEntityType, 'OCCUPANTS_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_PREMISEOCCUPANTSEntityType, 'OCCUPANTS_NAME', EdmPrimitiveType::CHARARRAY);
		
	$VP_PREMISEOCCUPANTSsResourceSet = $metadata->addResourceSet(
		'VP_PREMISEOCCUPANTSs', $VP_PREMISEOCCUPANTSEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_PREMISEOCCUPANTS($record)
		{
			$VP_PREMISEOCCUPANTS = new VP_PREMISEOCCUPANTS();
			$VP_PREMISEOCCUPANTS->OCCUPANTS_PK = $record['OCCUPANTS_PK'];
			$VP_PREMISEOCCUPANTS->OCCUPANTS_NAME = $record['OCCUPANTS_NAME'];

			return $VP_PREMISEOCCUPANTS;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_PREMISEROOMS entity type.
 * 
 * @category  Service
 * @package   Service_PremiseroomsView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_PREMISEROOMS{
	public $PREMISEROOMS_PK;
	public $PREMISEROOMS_NAME;
}

//Register the entity (resource) type 'VP_PREMISEROOMS'
	$VP_PREMISEROOMSEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_PREMISEROOMS'), 'VP_PREMISEROOMS', 'PremiseroomsView'
	);
	$metadata->addKeyProperty($VP_PREMISEROOMSEntityType, 'PREMISEROOMS_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_PREMISEROOMSEntityType, 'PREMISEROOMS_NAME', EdmPrimitiveType::CHARARRAY);
		
	$VP_PREMISEROOMSsResourceSet = $metadata->addResourceSet(
		'VP_PREMISEROOMSs', $VP_PREMISEROOMSEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_PREMISEROOMS($record)
		{
			$VP_PREMISEROOMS = new VP_PREMISEROOMS();
			$VP_PREMISEROOMS->PREMISEROOMS_PK = $record['PREMISEROOMS_PK'];
			$VP_PREMISEROOMS->PREMISEROOMS_NAME = $record['PREMISEROOMS_NAME'];

			return $VP_PREMISEROOMS;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_PREMISETYPES entity type.
 * 
 * @category  Service
 * @package   Service_PremisetypesView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_PREMISETYPES{
	public $PREMISETYPE_PK;
	public $PREMISETYPE_NAME;
}

//Register the entity (resource) type 'VP_PREMISETYPES'
	$VP_PREMISETYPESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_PREMISETYPES'), 'VP_PREMISETYPES', 'PremisetypesView'
	);
	$metadata->addKeyProperty($VP_PREMISETYPESEntityType, 'PREMISETYPE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_PREMISETYPESEntityType, 'PREMISETYPE_NAME', EdmPrimitiveType::CHARARRAY);
		
	$VP_PREMISETYPESsResourceSet = $metadata->addResourceSet(
		'VP_PREMISETYPESs', $VP_PREMISETYPESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_PREMISETYPES($record)
		{
			$VP_PREMISETYPES = new VP_PREMISETYPES();
			$VP_PREMISETYPES->PREMISETYPE_PK = $record['PREMISETYPE_PK'];
			$VP_PREMISETYPES->PREMISETYPE_NAME = $record['PREMISETYPE_NAME'];

			return $VP_PREMISETYPES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_RSCAT entity type.
 * 
 * @category  Service
 * @package   Service_RscatView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_RSCAT{
	public $RSCAT_PK;
	public $RSCAT_NAME;
	public $RSCAT_FORMUTILITY;
}

//Register the entity (resource) type 'VP_RSCAT'
	$VP_RSCATEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_RSCAT'), 'VP_RSCAT', 'RscatView'
	);
	$metadata->addKeyProperty($VP_RSCATEntityType, 'RSCAT_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSCATEntityType, 'RSCAT_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSCATEntityType, 'RSCAT_FORMUTILITY', EdmPrimitiveType::INT16);
		
	$VP_RSCATsResourceSet = $metadata->addResourceSet(
		'VP_RSCATs', $VP_RSCATEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_RSCAT($record)
		{
			$VP_RSCAT = new VP_RSCAT();
			$VP_RSCAT->RSCAT_PK = $record['RSCAT_PK'];
			$VP_RSCAT->RSCAT_NAME = $record['RSCAT_NAME'];
			$VP_RSCAT->RSCAT_FORMUTILITY = $record['RSCAT_FORMUTILITY'];

			return $VP_RSCAT;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_RSSUBCAT entity type.
 * 
 * @category  Service
 * @package   Service_RssubcatView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_RSSUBCAT{
	public $RSSUBCAT_PK;
	public $RSSUBCAT_RSCAT_FK;
	public $RSSUBCAT_NAME;
	public $RSSUBCAT_TYPE;
}

//Register the entity (resource) type 'VP_RSSUBCAT'
	$VP_RSSUBCATEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_RSSUBCAT'), 'VP_RSSUBCAT', 'RssubcatView'
	);
	$metadata->addKeyProperty($VP_RSSUBCATEntityType, 'RSSUBCAT_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSSUBCATEntityType, 'RSSUBCAT_RSCAT_FK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSSUBCATEntityType, 'RSSUBCAT_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSSUBCATEntityType, 'RSSUBCAT_TYPE', EdmPrimitiveType::INT32);
		
	$VP_RSSUBCATsResourceSet = $metadata->addResourceSet(
		'VP_RSSUBCATs', $VP_RSSUBCATEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_RSSUBCAT($record)
		{
			$VP_RSSUBCAT = new VP_RSSUBCAT();
			$VP_RSSUBCAT->RSSUBCAT_PK = $record['RSSUBCAT_PK'];
			$VP_RSSUBCAT->RSSUBCAT_RSCAT_FK = $record['RSSUBCAT_RSCAT_FK'];
			$VP_RSSUBCAT->RSSUBCAT_NAME = $record['RSSUBCAT_NAME'];
			$VP_RSSUBCAT->RSSUBCAT_TYPE = $record['RSSUBCAT_TYPE'];

			return $VP_RSSUBCAT;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_RSTARIFF entity type.
 * 
 * @category  Service
 * @package   Service_RstariffView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_RSTARIFF{
	public $RSTARIFF_NAME;
	public $RSTARIFF_PK;
	public $RSCAT_PK;
	public $RSCAT_NAME;
	public $RSSUBCAT_NAME;
	public $RSSUBCAT_TYPE;
	public $RSSUBCAT_PK;
}

//Register the entity (resource) type 'VP_RSTARIFF'
	$VP_RSTARIFFEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_RSTARIFF'), 'VP_RSTARIFF', 'RstariffView'
	);
	$metadata->addKeyProperty($VP_RSTARIFFEntityType, 'RSTARIFF_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSTARIFFEntityType, 'RSTARIFF_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTARIFFEntityType, 'RSCAT_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTARIFFEntityType, 'RSCAT_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSTARIFFEntityType, 'RSSUBCAT_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSTARIFFEntityType, 'RSSUBCAT_TYPE', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTARIFFEntityType, 'RSSUBCAT_PK', EdmPrimitiveType::INT32);
		
	$VP_RSTARIFFsResourceSet = $metadata->addResourceSet(
		'VP_RSTARIFFs', $VP_RSTARIFFEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_RSTARIFF($record)
		{
			$VP_RSTARIFF = new VP_RSTARIFF();
			$VP_RSTARIFF->RSTARIFF_NAME = $record['RSTARIFF_NAME'];
			$VP_RSTARIFF->RSTARIFF_PK = $record['RSTARIFF_PK'];
			$VP_RSTARIFF->RSCAT_PK = $record['RSCAT_PK'];
			$VP_RSTARIFF->RSCAT_NAME = $record['RSCAT_NAME'];
			$VP_RSTARIFF->RSSUBCAT_NAME = $record['RSSUBCAT_NAME'];
			$VP_RSTARIFF->RSSUBCAT_TYPE = $record['RSSUBCAT_TYPE'];
			$VP_RSTARIFF->RSSUBCAT_PK = $record['RSSUBCAT_PK'];

			return $VP_RSTARIFF;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_RSTYPES entity type.
 * 
 * @category  Service
 * @package   Service_RstypesView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_RSTYPES{
	public $RSSUBCAT_PK;
	public $RSSUBCAT_NAME;
	public $RSSUBCAT_TYPE;
	public $RSTARIFF_PK;
	public $RSTARIFF_NAME;
	public $RSTYPE_PK;
	public $RSTYPE_NAME;
	public $RSTYPE_MAIN;
	public $RSCAT_PK;
	public $RSCAT_NAME;
}

//Register the entity (resource) type 'VP_RSTYPES'
	$VP_RSTYPESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_RSTYPES'), 'VP_RSTYPES', 'RstypesView'
	);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSSUBCAT_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSSUBCAT_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSSUBCAT_TYPE', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSTARIFF_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSTARIFF_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSTYPE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSTYPE_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSTYPE_MAIN', EdmPrimitiveType::INT16);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSCAT_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_RSTYPESEntityType, 'RSCAT_NAME', EdmPrimitiveType::CHARARRAY);
		
	$VP_RSTYPESsResourceSet = $metadata->addResourceSet(
		'VP_RSTYPESs', $VP_RSTYPESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_RSTYPES($record)
		{
			$VP_RSTYPES = new VP_RSTYPES();
			$VP_RSTYPES->RSSUBCAT_PK = $record['RSSUBCAT_PK'];
			$VP_RSTYPES->RSSUBCAT_NAME = $record['RSSUBCAT_NAME'];
			$VP_RSTYPES->RSSUBCAT_TYPE = $record['RSSUBCAT_TYPE'];
			$VP_RSTYPES->RSTARIFF_PK = $record['RSTARIFF_PK'];
			$VP_RSTYPES->RSTARIFF_NAME = $record['RSTARIFF_NAME'];
			$VP_RSTYPES->RSTYPE_PK = $record['RSTYPE_PK'];
			$VP_RSTYPES->RSTYPE_NAME = $record['RSTYPE_NAME'];
			$VP_RSTYPES->RSTYPE_MAIN = $record['RSTYPE_MAIN'];
			$VP_RSTYPES->RSCAT_PK = $record['RSCAT_PK'];
			$VP_RSTYPES->RSCAT_NAME = $record['RSCAT_NAME'];

			return $VP_RSTYPES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_STATEPROVINCE entity type.
 * 
 * @category  Service
 * @package   Service_StateprovinceView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_STATEPROVINCE{
	public $STATEPROVINCE_PK;
	public $STATEPROVINCE_SHORTNAME;
	public $STATEPROVINCE_NAME_EN;
	public $STATEPROVINCE_NAME_ZH;
	public $COUNTRIES_PK;
	public $COUNTRIES_NAME_EN;
	public $COUNTRIES_NAME_ZH;
	public $COUNTRIES_ABREVIATION;
}

//Register the entity (resource) type 'VP_STATEPROVINCE'
	$VP_STATEPROVINCEEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_STATEPROVINCE'), 'VP_STATEPROVINCE', 'StateprovinceView'
	);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'STATEPROVINCE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'STATEPROVINCE_SHORTNAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'STATEPROVINCE_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'STATEPROVINCE_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'COUNTRIES_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'COUNTRIES_NAME_EN', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'COUNTRIES_NAME_ZH', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_STATEPROVINCEEntityType, 'COUNTRIES_ABREVIATION', EdmPrimitiveType::CHARARRAY);
	
	$VP_STATEPROVINCEsResourceSet = $metadata->addResourceSet(
		'VP_STATEPROVINCEs', $VP_STATEPROVINCEEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_STATEPROVINCE($record)
		{
			$VP_STATEPROVINCE = new VP_STATEPROVINCE();
			$VP_STATEPROVINCE->STATEPROVINCE_PK = $record['STATEPROVINCE_PK'];
			$VP_STATEPROVINCE->STATEPROVINCE_SHORTNAME = $record['STATEPROVINCE_SHORTNAME'];
			$VP_STATEPROVINCE->STATEPROVINCE_NAME_EN = $record['STATEPROVINCE_NAME_EN'];
			$VP_STATEPROVINCE->STATEPROVINCE_NAME_ZH = $record['STATEPROVINCE_NAME_ZH'];
			$VP_STATEPROVINCE->COUNTRIES_PK = $record['COUNTRIES_PK'];
			$VP_STATEPROVINCE->COUNTRIES_NAME_EN = $record['COUNTRIES_NAME_EN'];
			$VP_STATEPROVINCE->COUNTRIES_NAME_ZH = $record['COUNTRIES_NAME_ZH'];
			$VP_STATEPROVINCE->COUNTRIES_ABREVIATION = $record['COUNTRIES_ABREVIATION'];

			return $VP_STATEPROVINCE;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_TIMEZONES entity type.
 * 
 * @category  Service
 * @package   Service_TimezoneView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_TIMEZONES{
	public $TIMEZONE_PK;
	public $TIMEZONE_CC;
	public $TIMEZONE_LATITUDE;
	public $TIMEZONE_LONGITUDE;
	public $TIMEZONE_TZ;
	public $TIMEZONE_UTCOFFSET;
	public $TIMEZONE_HANACODE;
	public $TIMEZONE_UTCFLOAT;
}

//Register the entity (resource) type 'VP_TIMEZONES'
	$VP_TIMEZONESEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_TIMEZONES'), 'VP_TIMEZONES', 'TimezoneView'
	);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_CC', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_LATITUDE', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_LONGITUDE', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_TZ', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_UTCOFFSET', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_HANACODE', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_TIMEZONESEntityType, 'TIMEZONE_UTCFLOAT', EdmPrimitiveType::DOUBLE);
	
	$VP_TIMEZONESsResourceSet = $metadata->addResourceSet(
		'VP_TIMEZONESs', $VP_TIMEZONESEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_TIMEZONES($record)
		{
			$VP_TIMEZONES = new VP_TIMEZONES();
			$VP_TIMEZONES->TIMEZONE_PK = $record['TIMEZONE_PK'];
			$VP_TIMEZONES->TIMEZONE_CC = $record['TIMEZONE_CC'];
			$VP_TIMEZONES->TIMEZONE_LATITUDE = $record['TIMEZONE_LATITUDE'];
			$VP_TIMEZONES->TIMEZONE_LONGITUDE = $record['TIMEZONE_LONGITUDE'];
			$VP_TIMEZONES->TIMEZONE_TZ = $record['TIMEZONE_TZ'];
			$VP_TIMEZONES->TIMEZONE_UTCOFFSET = $record['TIMEZONE_UTCOFFSET'];
			$VP_TIMEZONES->TIMEZONE_HANACODE = $record['TIMEZONE_HANACODE'];
			$VP_TIMEZONES->TIMEZONE_UTCFLOAT = $record['TIMEZONE_UTCFLOAT'];

			return $VP_TIMEZONES;
		}

===================================================================================================
===================================================================================================
===================================================================================================

/**
 * VP_UOMS entity type.
 * 
 * @category  Service
 * @package   Service_UomsView
 * @author	Yash K. Kothari <odataphpproducer_alias@microsoft.com>
 * @copyright 2011 Microsoft Corp. (http://www.microsoft.com)
 * @license   New BSD license, (http://www.opensource.org/licenses/bsd-license.php)
 * @version   Release: 1.0
 * @link	  http://odataphpproducer.codeplex.com
 */
class VP_UOMS{
	public $UOMCAT_PK;
	public $UOMCAT_NAME;
	public $UOMSUBCAT_PK;
	public $UOMSUBCAT_NAME;
	public $UOM_PK;
	public $UOM_NAME;
}

//Register the entity (resource) type 'VP_UOMS'
	$VP_UOMSEntityType = $metadata->addEntityType(
		new ReflectionClass('VP_UOMS'), 'VP_UOMS', 'UomsView'
	);
	$metadata->addKeyProperty($VP_UOMSEntityType, 'UOMCAT_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_UOMSEntityType, 'UOMCAT_NAME', EdmPrimitiveType::CHARARRAY); 
	$metadata->addKeyProperty($VP_UOMSEntityType, 'UOMSUBCAT_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_UOMSEntityType, 'UOMSUBCAT_NAME', EdmPrimitiveType::CHARARRAY);
	$metadata->addKeyProperty($VP_UOMSEntityType, 'UOM_PK', EdmPrimitiveType::INT32);
	$metadata->addKeyProperty($VP_UOMSEntityType, 'UOM_NAME', EdmPrimitiveType::CHARARRAY
	);
	
	$VP_UOMSsResourceSet = $metadata->addResourceSet(
		'VP_UOMSs', $VP_UOMSEntityType
	);

/**
		 * Serialize the sql row into RSCAT object
		 * 
		 * @param array $record each row of RSCAT
		 * 
		 * @return Object
		 */
		private function _serializeVP_UOMS($record)
		{
			$VP_UOMS = new VP_UOMS();
			$VP_UOMS->UOMCAT_PK = $record['UOMCAT_PK'];
			$VP_UOMS->UOMCAT_NAME = $record['UOMCAT_NAME'];
			$VP_UOMS->UOMSUBCAT_PK = $record['UOMSUBCAT_PK'];
			$VP_UOMS->UOMSUBCAT_NAME = $record['UOMSUBCAT_NAME'];
			$VP_UOMS->UOM_PK = $record['UOM_PK'];
			$VP_UOMS->UOM_NAME = $record['UOM_NAME'];

			return $VP_UOMS;
		}

?>